{"version":3,"sources":["ccwc-video.es6"],"names":[],"mappings":"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","file":"ccwc-video.js","sourcesContent":["/**\n * CCWCVideo supports both video files and camera feeds\n * Blit your video to a canvas, get frame data, scale the frame/canvas output, and render video to an external canvas of your choosing\n */\nclass CCWCVideo extends HTMLElement {\n\n    /**\n     * initialize default class properties\n     * @private\n     */\n    setProperties() {\n        /**\n         * video source file or stream\n         * @type {string}\n         * @private\n         */\n        this._source = '';\n\n        /**\n         * use camera\n         * @type {boolean}\n         * @private\n         */\n        this._useCamera = false;\n\n        /**\n         * is component ready\n         * @type {boolean}\n         */\n        this.isReady = false;\n\n        /**\n         * width of scaled video\n         * @type {int}\n         */\n        this.videoScaledWidth = 0;\n\n        /**\n         * width of scaled video\n         * @type {int}\n         */\n        this.videoScaledWidth = 0;\n\n        /**\n         * height of scaled video\n         * @type {int}\n         */\n        this.videoScaledHeight = 0;\n\n        /**\n         * what type of data comes back with frame data event\n         * @type {string}\n         * @default imagedataurl\n         */\n        this.frameDataMode = 'imagedataurl';\n\n        /**\n         * determines whether to use the canvas element for display instead of the video element\n         * @type {boolean}\n         * @default false\n         */\n        this.useCanvasForDisplay = false;\n\n        /**\n         * refresh interval when using the canvas for display\n         * @type {int}\n         * @default 0 ms\n         */\n        this.canvasRefreshInterval = 0;\n\n        /**\n         * video element\n         * @type {HTMLElement}\n         * @private\n         */\n        this.videoElement = null;\n\n        /**\n         * camera sources list\n         * @type {Array}\n         */\n        this.cameraSources = [];\n\n        /**\n         * canvas element\n         * @type {Canvas}\n         * @private\n         */\n        this.canvasElement = null;\n\n        /**\n         * component shadow root\n         * @type {ShadowRoot}\n         * @private\n         */\n        this.root = null;\n\n        /**\n         * interval timer to draw frame redraws\n         * @type {int}\n         * @private\n         */\n        this.tick = null;\n\n        /**\n         * canvas context\n         * @type {CanvasContext}\n         * @private\n         */\n        this.canvasctx = null;\n\n        /**\n         * width of component\n         * @type {int}\n         * @default 0\n         */\n        this.width = 0;\n\n        /**\n         * height of component\n         * @type {int}\n         * @default 0\n         */\n        this.height = 0;\n\n        /**\n         * left offset for letterbox of video\n         * @type {int}\n         * @default 0\n         */\n        this.letterBoxLeft = 0;\n\n        /**\n         * top offset for letterbox of video\n         * @type {int}\n         * @default 0\n         */\n        this.letterBoxTop = 0;\n\n        /**\n         * aspect ratio of video\n         * @type {number}\n         */\n        this.aspectRatio = 0;\n\n        /**\n         * render scale for canvas frame data\n         * best used when grabbing frame data at a different size than the shown video\n         * @attribute canvasScale\n         * @type {float}\n         * @default 1.0\n         */\n        this.canvasScale = 1.0;\n    }\n\n    /**\n     * update canvas dimensions when resized\n     * @private\n     */\n    onResize() {\n        // set size properties based on component height\n        this.width = this.offsetWidth;\n        this.height = this.offsetHeight;\n\n        // set video/canvas to component size\n        this.videoElement.setAttribute('width', this.width);\n        this.videoElement.setAttribute('height', this.height);\n        this.canvasElement.setAttribute('width', this.width);\n        this.canvasElement.setAttribute('height', this.height);\n\n        // calculate aspect ratio\n        this.aspectRatio = this.videoElement.videoWidth / this.videoElement.videoHeight;\n        this.videoScaledWidth = this.width;\n        this.videoScaledHeight = this.height;\n\n        // calculate letterbox borders\n        var componentAspectRatio = this.width/this.height;\n        if (componentAspectRatio < this.aspectRatio) {\n            this.videoScaledHeight = this.width / this.aspectRatio;\n            this.letterBoxTop = this.height/2 - this.videoScaledHeight/2;\n            this.letterBoxLeft = 0;\n        } else if (componentAspectRatio > this.aspectRatio) {\n            this.videoScaledWidth = this.height * this.aspectRatio;\n            this.letterBoxLeft = this.width/2 - this.videoScaledWidth/2;\n            this.letterBoxTop = 0;\n        } else {\n            this.letterBoxTop = 0;\n            this.letterBoxLeft = 0;\n        }\n    };\n\n\n    /**\n     * set video source\n     * @param {string | int} src video source uri\n     */\n    set source(src) {\n        if (!src) { return; }\n        this._source = src;\n\n        if (this._useCamera && this.cameraSources.length === 0) {\n            this.refreshCameraSources();\n            return;\n        }\n\n        if (this._useCamera || parseInt(src) === src) {\n            this.setCameraSourceByIndex(src);\n        } else if (this._useCamera) {\n            this.setCameraSourceByID(src);\n        } else {\n            this.videoElement.src = src;\n        }\n    };\n\n    /**\n     * get video source\n     * @return {string | int} src video source uri\n     */\n    get source() {\n        return this._source;\n    };\n\n    /**\n     * get canvas context for drawing into it\n     * @return {object} context canvas context\n     */\n    get canvasContext() {\n        return this.canvasctx;\n    };\n\n    /**\n     * get canvas context for drawing into it\n     * @param {object} context canvas context\n     */\n    set canvasContext(context) {\n        this.canvasctx = context;\n    };\n\n    /**\n     * get image data for current frame\n     * @param {boolean} mode data mode (binary or base64)\n     * @param {boolean} noredraw do not perform redraw (can be wasteful)\n     * @return {object} image data\n     */\n    getCurrentFrameData(mode, noredraw) {\n        var data;\n        if (!mode) {\n            mode = this.frameDataMode;\n        }\n        if (!noredraw) {\n            this.canvasctx.canvas.width = this.width * this.canvasScale;\n            this.canvasctx.canvas.height = this.height * this.canvasScale;\n            this.canvasctx.drawImage(\n                this.videoElement,\n                this.letterBoxLeft,\n                this.letterBoxTop,\n                this.videoScaledWidth * this.canvasScale,\n                this.videoScaledHeight * this.canvasScale);\n        }\n\n        switch (mode) {\n            case 'binary':\n                var base64Data = data.replace('data:image/png;base64', '');\n                var binaryData = new Buffer(base64Data, 'base64');\n                data = binaryData;\n                break;\n\n            case 'imagedataurl':\n                data = this.canvasElement.toDataURL('image/png');\n                break;\n\n            case 'imagedata':\n                data = this.canvasctx.getImageData(this.letterBoxLeft, this.letterBoxTop, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\n                break;\n        }\n        return data;\n    };\n\n    /**\n     * set camera source by index\n     * @param {int} index\n     */\n    setCameraSourceByIndex(index) {\n        if (!index || index >= this.cameraSources.length) { console.log(\"Video Source Index does not exist\"); return; }\n        this.setCameraSourceByID(this.cameraSources[index].id);\n    };\n\n    /**\n     * set camera source by id\n     * @param {String} id\n     */\n    setCameraSourceByID(id) {\n        navigator.webkitGetUserMedia(\n            { video: {optional: [{sourceId: id }]}},\n            this.onCameraStream.bind(this),\n            function() {}\n        );\n    };\n\n    /**\n     * refresh camera sources\n     */\n    refreshCameraSources() {\n        this.cameraSources = [];\n        MediaStreamTrack.getSources( sources => {\n            this.onCameraSources(sources);\n        });\n    };\n\n    /**\n     * on camera video source stream\n     * @param stream\n     * @private\n     */\n    onCameraStream(stream) {\n        this.videoElement.src = URL.createObjectURL(stream);\n        this.videoElement.onloadedmetadata = e => {\n            this.onResize();\n        };\n    };\n\n    /**\n     * on camera sources callback\n     * @param {array} sources found\n     * @private\n     */\n    onCameraSources(sources) {\n        var storageIndex = 0;\n        for (var i=0; i < sources.length; i++) {\n            if (sources[i].kind == 'video') {\n                var label = sources[i].label;\n                if (label == \"\") { label = \"video \" + Number(storageIndex+1); }\n                sources[storageIndex] = sources[i].id;\n                this.cameraSources.push({ label: label, id: sources[i].id });\n                storageIndex++;\n            }\n        }\n\n        var event = new CustomEvent('camerasfound', { detail: { cameras: this.cameraSources } });\n        this.dispatchEvent(event);\n        if (this._source) { this.source = this._source; }\n    };\n\n    /**\n     * save current frame to file\n     * @param {String} path file path\n     */\n    saveCurrentFrameToFile(path) {\n        var fs = require('fs');\n        if (!fs) {\n            throw new Error('This method uses Node.js functionality, and you are not running within Node.js');\n        }\n        var data = this.getCurrentFrameData().toString('binary');\n        fs.writeFileSync(path, data, 'binary');\n    };\n\n    /**\n     * parse attributes on element\n     * @private\n     */\n    parseAttributes() {\n        if (this.hasAttribute('useCamera')) {\n            this._useCamera = true;\n        } else {\n            this._useCamera = false;\n        }\n\n        if (this.hasAttribute('src')) {\n            this._source = this.getAttribute('src');\n        }\n\n        if (this.hasAttribute('useCanvasForDisplay')) {\n            this.useCanvasForDisplay = true;\n        } else {\n            this.useCanvasForDisplay = false;\n        }\n\n        if (this.hasAttribute('frameDataMode')) {\n            this.frameDataMode = this.getAttribute('frameDataMode');\n        }\n\n        if (this.hasAttribute('canvasRefreshInterval')) {\n            this.canvasRefreshInterval = parseInt(this.getAttribute('canvasRefreshInterval'));\n        }\n\n        if (this.hasAttribute('canvasScale')) {\n            this.canvasScale = parseFloat(this.getAttribute('canvasScale'));\n        }\n\n        if (this.canvasRefreshInterval === 0 && this.useCanvasForDisplay) {\n            console.log('Warning: Using canvas for display, but the canvas refresh interval is not set or set to 0. Setting refresh interval to 250ms.');\n            this.canvasRefreshInterval = 250;\n        }\n    };\n\n    /**\n     * element created callback\n     * @private\n     */\n    createdCallback() {\n        this.setProperties();\n        this.parseAttributes();\n    };\n\n    /**\n     * element attached callback\n     * @private\n     */\n    attachedCallback() {\n        let template = this.owner.querySelector(\"template\");\n        let clone = template.content.cloneNode(true);\n        this.root = this.createShadowRoot();\n        this.root.appendChild(clone);\n\n        window.addEventListener('HTMLImportsLoaded', e => {\n            this.onResize();\n        });\n\n        this.videoElement = this.root.querySelector('#vid');\n        this.canvasElement = this.root.querySelector('#canvas');\n        this.videoElement.onloadedmetadata = e => {\n            this.onResize();\n        };\n        this.source = this._source;\n        if (this.useCanvasForDisplay) {\n            this.videoElement.style.display = 'none';\n        } else {\n            this.canvasElement.style.display = 'none';\n        }\n\n        if (this.canvasRefreshInterval > 0) {\n            this.tick = setInterval(() => {\n                if (this.width === 0 || this.height === 0) { return; }\n                var event = new CustomEvent('frameupdate', { detail: {\n                    framedata: this.getCurrentFrameData(),\n                    canvascontext: this.canvasctx,\n                    videoWidth: this.videoScaledWidth * this.canvasScale,\n                    videoHeight: this.videoScaledHeight * this.canvasScale,\n                    videoLeft: this.letterBoxLeft * this.canvasScale,\n                    videoTop: this.letterBoxTop * this.canvasScale,\n                    width: this.width * this.canvasScale,\n                    height: this.height * this.canvasScale }});\n\n                this.dispatchEvent(event);\n            }, this.canvasRefreshInterval);\n        }\n        this.canvasctx = this.canvasElement.getContext('2d');\n\n        this.isReady = true;\n        var event = new CustomEvent('ready');\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * element detached callback\n     * @private\n     */\n    detachedCallback() {};\n\n\n    /**\n     * attributeChangedCallback\n     * @private\n     * @param {String} attr attribute changed\n     * @param {*} oldVal old value\n     * @param {*} newVal new value\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {};\n\n}\n\nCCWCVideo.prototype.owner = (document._currentScript || document.currentScript).ownerDocument;\ndocument.registerElement('ccwc-video', CCWCVideo);"]}