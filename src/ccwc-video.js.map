{"version":3,"sources":["ccwc-video.es6"],"names":[],"mappings":"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","file":"ccwc-video.js","sourcesContent":["/**\r\n * CCWCVideo supports both video files and camera feeds\r\n * Blit your video to a canvas, get frame data, scale the frame/canvas output, and render video to an external canvas of your choosing\r\n */\r\nclass CCWCVideo extends HTMLElement {\r\n\r\n    /**\r\n     * initialize default class properties\r\n     * @private\r\n     */\r\n    setProperties() {\r\n        /**\r\n         * video source file or stream\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        this._source = '';\r\n\r\n        /**\r\n         * use webgl\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._useWebGL = false;\r\n\r\n        /**\r\n         * use camera\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._useCamera = false;\r\n\r\n        /**\r\n         * is component ready\r\n         * @type {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        /**\r\n         * is video playing\r\n         * @type {boolean}\r\n         */\r\n        this.isPlaying = false;\r\n\r\n        /**\r\n         * width of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledWidth = 0;\r\n\r\n        /**\r\n         * width of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledWidth = 0;\r\n\r\n        /**\r\n         * height of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledHeight = 0;\r\n\r\n        /**\r\n         * what type of data comes back with frame data event\r\n         * @type {string}\r\n         * @default imagedataurl\r\n         */\r\n        this.frameDataMode = 'none';\r\n\r\n        /**\r\n         * determines whether to use the canvas element for display instead of the video element\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.useCanvasForDisplay = false;\r\n\r\n        /**\r\n         * canvas filter function (manipulate pixels)\r\n         * @type {method}\r\n         * @default 0 ms\r\n         */\r\n        this.canvasFilter = null;\r\n\r\n        /**\r\n         * When the texture read (_glReadFlipCorrection) is true, this makes the display go upside down, correct the canvas by inverse scaling in the vertical\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        this._flipCanvas = false;\r\n\r\n        /**\r\n         * refresh interval when using the canvas for display\r\n         * @type {int}\r\n         * @default 0 ms\r\n         */\r\n        this.canvasRefreshInterval = 0;\r\n\r\n        /**\r\n         * video element\r\n         * @type {HTMLElement}\r\n         * @private\r\n         */\r\n        this.videoElement = null;\r\n\r\n        /**\r\n         * camera sources list\r\n         * @type {Array}\r\n         */\r\n        this.cameraSources = [];\r\n\r\n        /**\r\n         * canvas element\r\n         * @type {Canvas}\r\n         * @private\r\n         */\r\n        this.canvasElement = null;\r\n\r\n        /**\r\n         * component shadow root\r\n         * @type {ShadowRoot}\r\n         * @private\r\n         */\r\n        this.root = null;\r\n\r\n        /**\r\n         * interval timer to draw frame redraws\r\n         * @type {int}\r\n         * @private\r\n         */\r\n        this.tick = null;\r\n\r\n        /**\r\n         * canvas context\r\n         * @type {CanvasContext}\r\n         * @private\r\n         */\r\n        this.canvasctx = null;\r\n\r\n        /**\r\n         * has the canvas context been overridden from the outside?\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._canvasOverride = false;\r\n\r\n        /**\r\n         * width of component\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.width = 0;\r\n\r\n        /**\r\n         * height of component\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.height = 0;\r\n\r\n        /**\r\n         * left offset for letterbox of video\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.letterBoxLeft = 0;\r\n\r\n        /**\r\n         * top offset for letterbox of video\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.letterBoxTop = 0;\r\n\r\n        /**\r\n         * aspect ratio of video\r\n         * @type {number}\r\n         */\r\n        this.aspectRatio = 0;\r\n\r\n        /**\r\n         * render scale for canvas frame data\r\n         * best used when grabbing frame data at a different size than the shown video\r\n         * @attribute canvasScale\r\n         * @type {float}\r\n         * @default 1.0\r\n         */\r\n        this.canvasScale = 1.0;\r\n    }\r\n\r\n    /**\r\n     * on video playing handler\r\n     */\r\n    onPlaying() {\r\n        this.isPlaying = true;\r\n        var event = new CustomEvent('videoplaying', {\r\n            detail: {\r\n                source: this.source,\r\n                videoElement: this.videoElement,\r\n                videoWidth: this.videoScaledWidth,\r\n                videoHeight: this.videoScaledHeight,\r\n                width: this.width,\r\n                height: this.height } });\r\n        this.dispatchEvent(event);\r\n\r\n        this.canvasElement.width = this.videoScaledWidth * this.canvasScale;\r\n        this.canvasElement.height = this.videoScaledHeight * this.canvasScale;\r\n\r\n        var ctxstring = this._useWebGL ? 'webgl' : '2d';\r\n        if (!this._canvasOverride) {\r\n            this.canvasctx = this.canvasElement.getContext(ctxstring);\r\n        }\r\n\r\n        if (this._useWebGL) {\r\n            this.webglProperties.renderer = this.webglProperties.setupHandler.apply(this, [this.webglProperties]);\r\n            var event = new CustomEvent('webglsetup', { detail: { properties: this.webglProperties } });\r\n            this.dispatchEvent(event);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update canvas dimensions when resized\r\n     * @private\r\n     */\r\n    onResize() {\r\n        // set size properties based on component height\r\n        this.width = this.offsetWidth;\r\n        this.height = this.offsetHeight;\r\n\r\n        // calculate aspect ratio\r\n        this.aspectRatio = this.videoElement.videoWidth / this.videoElement.videoHeight;\r\n        this.videoScaledWidth = this.width;\r\n        this.videoScaledHeight = this.height;\r\n\r\n        // calculate letterbox borders\r\n        var componentAspectRatio = this.width/this.height;\r\n        if (componentAspectRatio < this.aspectRatio) {\r\n            this.videoScaledHeight = this.width / this.aspectRatio;\r\n            this.letterBoxTop = this.height/2 - this.videoScaledHeight/2;\r\n            this.letterBoxLeft = 0;\r\n        } else if (componentAspectRatio > this.aspectRatio) {\r\n            this.videoScaledWidth = this.height * this.aspectRatio;\r\n            this.letterBoxLeft = this.width/2 - this.videoScaledWidth/2;\r\n            this.letterBoxTop = 0;\r\n        } else {\r\n            this.letterBoxTop = 0;\r\n            this.letterBoxLeft = 0;\r\n        }\r\n\r\n        // set video/canvas to component size\r\n        this.videoElement.setAttribute('width', this.videoScaledWidth);\r\n        this.videoElement.setAttribute('height', this.videoScaledHeight);\r\n        this.canvasElement.setAttribute('width', this.videoScaledWidth);\r\n        this.canvasElement.setAttribute('height', this.videoScaledHeight);\r\n        this.videoElement.style.top = this.letterBoxTop + 'px';\r\n        this.videoElement.style.left = this.letterBoxLeft + 'px';\r\n        this.canvasElement.style.top = this.letterBoxTop + 'px';\r\n        this.canvasElement.style.left = this.letterBoxLeft + 'px';\r\n    };\r\n\r\n\r\n    /**\r\n     * set video source\r\n     * @param {string | int} src video source uri\r\n     */\r\n    set source(src) {\r\n        if (!src) { return; }\r\n        this._source = src;\r\n\r\n        if (this._useCamera && this.cameraSources.length === 0) {\r\n            this.refreshCameraSources();\r\n            return;\r\n        }\r\n\r\n        if (this._useCamera || parseInt(src) === src) {\r\n            this.setCameraSourceByIndex(src);\r\n        } else if (this._useCamera) {\r\n            this.setCameraSourceByID(src);\r\n        } else {\r\n            this.videoElement.src = src;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get video source\r\n     * @return {string | int} src video source uri\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    };\r\n\r\n    /**\r\n     * get canvas context for drawing into it\r\n     * @return {object} context canvas context\r\n     */\r\n    get canvasContext() {\r\n        return this.canvasctx;\r\n    };\r\n\r\n    /**\r\n     * get canvas context for drawing into it\r\n     * @param {object} context canvas context\r\n     */\r\n    set canvasContext(context) {\r\n        this.canvasctx = context;\r\n        this._canvasOverride = true;\r\n    };\r\n\r\n    /**\r\n     * get image data for current frame\r\n     * @param {boolean} mode data mode (binary or base64)\r\n     * @param {boolean} noredraw do not perform redraw (can be wasteful)\r\n     * @return {object} image data\r\n     */\r\n    getCurrentFrameData(mode, noredraw) {\r\n        var data, filtered;\r\n        if (!mode) {\r\n            mode = this.frameDataMode;\r\n        }\r\n        if (!noredraw) {\r\n            if (this._useWebGL) {\r\n                //console.log(this.webglProperties.renderer)\r\n                this.webglProperties.renderHandler(this.webglProperties.renderer);\r\n            } else {\r\n                this.canvasctx.drawImage(\r\n                    this.videoElement, 0, 0,\r\n                    this.videoScaledWidth * this.canvasScale,\r\n                    this.videoScaledHeight * this.canvasScale);\r\n\r\n                if (this.canvasFilter) {\r\n                    filtered = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    this.canvasctx.putImageData(this.canvasFilter(filtered), 0, 0, 0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        switch (mode) {\r\n            case 'binary':\r\n                var base64Data = data.replace('data:image/png;base64', '');\r\n                var binaryData = new Buffer(base64Data, 'base64');\r\n                data = binaryData;\r\n                break;\r\n\r\n            case 'imagedataurl':\r\n                data = this.canvasElement.toDataURL('image/png');\r\n                break;\r\n\r\n            case 'imagedata':\r\n                if (!filtered) {\r\n                    if (this._useWebGL) {\r\n                        data = ccwc.image.webgl.filter.getCanvasPixels(this.webglProperties.renderer);\r\n                    } else {\r\n                        data = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    }\r\n                } else {\r\n                    // save some CPU cycles if we already did this\r\n                    data = filtered;\r\n                }\r\n                break;\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * set camera source by index\r\n     * @param {int} index\r\n     */\r\n    setCameraSourceByIndex(index) {\r\n        if (!index || index >= this.cameraSources.length) { console.log(\"Video Source Index does not exist\"); return; }\r\n        this.setCameraSourceByID(this.cameraSources[index].id);\r\n    };\r\n\r\n    /**\r\n     * set camera source by id\r\n     * @param {String} id\r\n     */\r\n    setCameraSourceByID(id) {\r\n        navigator.webkitGetUserMedia(\r\n            { video: {optional: [{sourceId: id }]}},\r\n            this.onCameraStream.bind(this),\r\n            function() {}\r\n        );\r\n    };\r\n\r\n    /**\r\n     * refresh camera sources\r\n     */\r\n    refreshCameraSources() {\r\n        this.cameraSources = [];\r\n        MediaStreamTrack.getSources( sources => {\r\n            this.onCameraSources(sources);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * on camera video source stream\r\n     * @param stream\r\n     * @private\r\n     */\r\n    onCameraStream(stream) {\r\n        this.videoElement.src = URL.createObjectURL(stream);\r\n        this.videoElement.onloadedmetadata = e => {\r\n            this.onResize();\r\n        };\r\n    };\r\n\r\n    /**\r\n     * on camera sources callback\r\n     * @param {array} sources found\r\n     * @private\r\n     */\r\n    onCameraSources(sources) {\r\n        var storageIndex = 0;\r\n        for (var i=0; i < sources.length; i++) {\r\n            if (sources[i].kind == 'video') {\r\n                var label = sources[i].label;\r\n                if (label == \"\") { label = \"video \" + Number(storageIndex+1); }\r\n                sources[storageIndex] = sources[i].id;\r\n                this.cameraSources.push({ label: label, id: sources[i].id });\r\n                storageIndex++;\r\n            }\r\n        }\r\n\r\n        var event = new CustomEvent('camerasfound', { detail: { cameras: this.cameraSources } });\r\n        this.dispatchEvent(event);\r\n        if (this._source) { this.source = this._source; }\r\n    };\r\n\r\n    /**\r\n     * save current frame to file\r\n     * @param {String} path file path\r\n     */\r\n    saveCurrentFrameToFile(path) {\r\n        var fs = require('fs');\r\n        if (!fs) {\r\n            throw new Error('This method uses Node.js functionality, and you are not running within Node.js');\r\n        }\r\n        var data = this.getCurrentFrameData().toString('binary');\r\n        fs.writeFileSync(path, data, 'binary');\r\n    };\r\n\r\n    /**\r\n     * setup handler for WebGL Scene\r\n     * @param {Object} props webgl properties\r\n     * @return renderer instance\r\n     */\r\n    webglSetupHandler(props) {\r\n        var filter;\r\n        if (props.vertexShader && props.fragmentShader) {\r\n            filter = ccwc.image.webgl.filter.createFilterFromShaders(props.vertexShader, props.fragmentShader)\r\n        } else {\r\n            filter = ccwc.image.webgl.filter.createFilterFromName(props.filter, props.filterLibrary);\r\n        }\r\n        props.textures.unshift(this.videoElement);\r\n        // texture comes in upside down. We can flip it according to this boolean\r\n        // the cost is that the texture is now flipped on the display, but flipCanvas (if true) will flip accordingly\r\n        console.log(props.textures)\r\n        var renderer = ccwc.image.webgl.filter.createRenderProps(this.canvasctx, filter, props.textures, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n        renderer.flipTexture = props.flipTexture;\r\n        return renderer;\r\n    };\r\n\r\n    /**\r\n     * render handler for WebGL Scene\r\n     * @param renderer WebGL render properties\r\n     */\r\n    webglRenderHandler(renderer) {\r\n        ccwc.image.webgl.filter.render(renderer, [0, 1]);\r\n    };\r\n\r\n    /**\r\n     * parse attributes on element\r\n     * @private\r\n     */\r\n    parseAttributes() {\r\n        if (this.hasAttribute('useCamera') || this.hasAttribute('usecamera')) {\r\n            this._useCamera = true;\r\n        } else {\r\n            this._useCamera = false;\r\n        }\r\n\r\n        if (this.hasAttribute('src')) {\r\n            this._source = this.getAttribute('src');\r\n        }\r\n\r\n        if (this.hasAttribute('useCanvasForDisplay')) {\r\n            this.useCanvasForDisplay = true;\r\n        } else {\r\n            this.useCanvasForDisplay = false;\r\n        }\r\n\r\n        if (this.hasAttribute('frameDataMode')) {\r\n            this.frameDataMode = this.getAttribute('frameDataMode');\r\n        }\r\n\r\n        if (this.hasAttribute('canvasRefreshInterval')) {\r\n            this.canvasRefreshInterval = parseInt(this.getAttribute('canvasRefreshInterval'));\r\n        }\r\n\r\n        if (this.hasAttribute('canvasScale')) {\r\n            this.canvasScale = parseFloat(this.getAttribute('canvasScale'));\r\n        }\r\n\r\n        if (this.hasAttribute('usewebgl') || this.hasAttribute('useWebGL')) {\r\n            this._useWebGL = true;\r\n        }\r\n\r\n        if (this.hasAttribute('glfilter')) {\r\n            this.webglProperties.filter = this.getAttribute('glFilter');\r\n        }\r\n\r\n        if (this.hasAttribute('flipCanvas')) {\r\n            this._flipCanvas = true;\r\n        }\r\n\r\n        if (this.hasAttribute('glFlipTexture')) {\r\n            this.webglProperties.flipTexture = true;\r\n        }\r\n\r\n        if (this.canvasRefreshInterval === 0 && this.useCanvasForDisplay) {\r\n            console.log('Warning: Using canvas for display, but the canvas refresh interval is not set or set to 0. Setting refresh interval to 250ms.');\r\n            this.canvasRefreshInterval = 250;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * element created callback\r\n     * @private\r\n     */\r\n    createdCallback() {\r\n        this.webglProperties = {\r\n            flipTexture: false,\r\n            filterLibrary: ccwc.image.webgl.shaders,\r\n            setupHandler: this.webglSetupHandler,\r\n            renderHandler: this.webglRenderHandler,\r\n            filter: 'passthrough',\r\n            textures: []\r\n        };\r\n\r\n        this.setProperties();\r\n        this.parseAttributes();\r\n    };\r\n\r\n    /**\r\n     * element attached callback\r\n     * @private\r\n     */\r\n    attachedCallback() {\r\n        let template = this.owner.querySelector(\"template\");\r\n        let clone = template.content.cloneNode(true);\r\n        this.root = this.createShadowRoot();\r\n        this.root.appendChild(clone);\r\n\r\n        window.addEventListener('HTMLImportsLoaded', e => {\r\n            this.onResize();\r\n        });\r\n\r\n        this.videoElement = this.root.querySelector('#vid');\r\n        this.videoElement.addEventListener('play', e => this.onPlaying(e));\r\n        this.canvasElement = this.root.querySelector('#canvas');\r\n\r\n        if (this._flipCanvas) {\r\n            this.canvasElement.style.transform = 'scale(1, -1)';\r\n        }\r\n        this.videoElement.onloadedmetadata = e => {\r\n            this.onResize();\r\n        };\r\n\r\n        this.source = this._source;\r\n        if (this.useCanvasForDisplay) {\r\n            this.videoElement.style.display = 'none';\r\n        } else {\r\n            this.canvasElement.style.display = 'none';\r\n        }\r\n\r\n        if (this.canvasRefreshInterval > 0) {\r\n            this.tick = setInterval(() => {\r\n                if (this.width === 0 || this.height === 0) { return; }\r\n                if (!this.isPlaying) { return; }\r\n                var event = new CustomEvent('frameupdate', { detail: {\r\n                    framedata: this.getCurrentFrameData(),\r\n                    canvascontext: this.canvasctx,\r\n                    videoWidth: this.videoScaledWidth * this.canvasScale,\r\n                    videoHeight: this.videoScaledHeight * this.canvasScale,\r\n                    videoLeft: this.letterBoxLeft * this.canvasScale,\r\n                    videoTop: this.letterBoxTop * this.canvasScale,\r\n                    width: this.width * this.canvasScale,\r\n                    height: this.height * this.canvasScale }});\r\n\r\n                this.dispatchEvent(event);\r\n            }, this.canvasRefreshInterval);\r\n        }\r\n\r\n        this.isReady = true;\r\n        var event = new CustomEvent('ready');\r\n        this.dispatchEvent(event);\r\n    };\r\n\r\n    /**\r\n     * element detached callback\r\n     * @private\r\n     */\r\n    detachedCallback() {};\r\n\r\n\r\n    /**\r\n     * attributeChangedCallback\r\n     * @private\r\n     * @param {String} attr attribute changed\r\n     * @param {*} oldVal old value\r\n     * @param {*} newVal new value\r\n     */\r\n    attributeChangedCallback(attr, oldVal, newVal) {};\r\n\r\n}\r\n\r\nCCWCVideo.prototype.owner = (document._currentScript || document.currentScript).ownerDocument;\r\ndocument.registerElement('ccwc-video', CCWCVideo);"],"sourceRoot":"/source/"}