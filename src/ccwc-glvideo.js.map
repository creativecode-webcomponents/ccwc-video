{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","../ccwc-image-utils/src/webgl/constants.es6","../ccwc-image-utils/src/webgl/filters.es6","../ccwc-image-utils/src/webgl/shaders.es6","../ccwc-image-utils/src/webgl/textures.es6","../ccwc-image-utils/src/webgl/uniforms.es6","src/ccwc-glvideo.es6","src/ccwc-video.es6"],"names":[],"mappings":"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","file":"ccwc-glvideo.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default {\r\n    uniforms: {\r\n        UNIFORM1f: '1f',\r\n        UNIFORM2f: '2f',\r\n        UNIFORM3f: '3f',\r\n        UNIFORM4f: '4f',\r\n\r\n        UNIFORM1i: '1i',\r\n        UNIFORM2i: '2i',\r\n        UNIFORM3i: '3i',\r\n        UNIFORM4i: '4i'\r\n    }\r\n}","import Constants from './constants.es6';\r\nimport Shaders from './shaders.es6';\r\nimport Filters from './filters.es6';\r\nimport Textures from './textures.es6';\r\nimport Uniforms from './uniforms.es6';\r\n\r\nexport default {\r\n    /**\r\n     * create filter from shaders\r\n     * @param vertexShader\r\n     * @param fragmentShader\r\n     * @returns {{vertexShader: *, fragmentShader: *}}\r\n     */\r\n    createFilterFromShaders(vertexShader, fragmentShader) {\r\n        return { vertexShader: vertexShader, fragmentShader: fragmentShader };\r\n    },\r\n\r\n    /**\r\n     * create a filter from filter name\r\n     * @param name\r\n     * @param memory space/variable to pull shader from\r\n     */\r\n    createFilterFromName(name, shaderloc) {\r\n        if (!shaderloc) {\r\n            shaderloc = Shaders;\r\n        }\r\n        if (!shaderloc[name]) {\r\n            console.log('Shader ', name, 'not found in ', shaderloc, ' using a passthrough shader instead');\r\n            shaderloc = Shaders;\r\n            name = 'passthrough';\r\n        }\r\n        var vtx = shaderloc[name].vertex;\r\n        var frg = shaderloc[name].fragment;\r\n        return this.createFilterFromShaders(vtx, frg);\r\n    },\r\n\r\n    /**\r\n     * create object for render\r\n     * @param {Object}params\r\n     */\r\n    createRenderObject(params) {\r\n        var props = {};\r\n\r\n        props.gl = params.gl;\r\n        props.width = props.gl.canvas.width;\r\n        props.height = props.gl.canvas.height;\r\n\r\n        if (params.width) { props.width = params.width; }\r\n        if (params.height) { props.height = params.height; }\r\n\r\n        props.filter = params.filter;\r\n        props.textures = new Textures(props.width,props.height);\r\n\r\n        props.canvas2DHelper = document.createElement('canvas');\r\n        props.canvas2DHelper.width = props.width;\r\n        props.canvas2DHelper.height = props.height;\r\n        props.canvas2DHelperContext = props.canvas2DHelper.getContext('2d');\r\n\r\n        props.uniforms = new Uniforms();\r\n        props.textures = new Textures(props.gl, props.width, props.height);\r\n\r\n        if (params.textures) {\r\n            for (var c = 0; c < params.textures.length; c++) {\r\n                props.textures.add(params.textures[c].name, params.textures[c].texture, params.textures[c].index, params.textures[c].pixelStore);\r\n            }\r\n        }\r\n\r\n        if (params.uniforms) {\r\n            for (var c = 0; c < params.uniforms.length; c++) {\r\n                props.uniforms.add(params.uniforms[c].name, params.uniforms[c].type, params.uniforms[c].values);\r\n            }\r\n        }\r\n\r\n        if (params.autorender) {\r\n            return this.render(props);\r\n        }\r\n\r\n        return props;\r\n    },\r\n\r\n    /**\r\n     * render WebGL filter on current texture\r\n     * @param glprops\r\n     * @param refreshTextureIndices texture refresh indices (optional)\r\n     * @returns {*}\r\n     */\r\n    render(glprops) {\r\n        if (!glprops.isInitialized) {\r\n            var vertexShader = glprops.gl.createShader(glprops.gl.VERTEX_SHADER);\r\n            glprops.gl.shaderSource(vertexShader, glprops.filter.vertexShader);\r\n            glprops.gl.compileShader(vertexShader);\r\n\r\n            var fragmentShader = glprops.gl.createShader(glprops.gl.FRAGMENT_SHADER);\r\n            glprops.gl.shaderSource(fragmentShader, glprops.filter.fragmentShader);\r\n            glprops.gl.compileShader(fragmentShader);\r\n\r\n            glprops.program = glprops.gl.createProgram();\r\n            glprops.gl.attachShader(glprops.program, vertexShader);\r\n            glprops.gl.attachShader(glprops.program, fragmentShader);\r\n            glprops.gl.linkProgram(glprops.program);\r\n            glprops.gl.useProgram(glprops.program);\r\n\r\n            var positionLocation = glprops.gl.getAttribLocation(glprops.program, 'a_position');\r\n            var texCoordBuffer = glprops.gl.createBuffer();\r\n            var rectCoordBuffer = glprops.gl.createBuffer();\r\n            var texCoords = new Float32Array([0.0,  0.0, 1.0,  0.0, 0.0,  1.0, 0.0,  1.0, 1.0,  0.0, 1.0,  1.0]);\r\n            var rectCoords = new Float32Array([0, 0, glprops.textures.width, 0, 0, glprops.textures.height, 0,\r\n                glprops.textures.height, glprops.textures.width, 0, glprops.textures.width, glprops.textures.height]);\r\n\r\n            glprops.gl.bindBuffer(glprops.gl.ARRAY_BUFFER, texCoordBuffer);\r\n            glprops.gl.bufferData(glprops.gl.ARRAY_BUFFER, texCoords, glprops.gl.STATIC_DRAW);\r\n\r\n            var texCoordLocation = glprops.gl.getAttribLocation(glprops.program, 'a_texCoord');\r\n            glprops.gl.enableVertexAttribArray(texCoordLocation);\r\n            glprops.gl.vertexAttribPointer(texCoordLocation, 2, glprops.gl.FLOAT, false, 0, 0);\r\n\r\n            glprops.uniforms.add('u_resolution', Constants.uniforms.UNIFORM2f, [glprops.gl.canvas.width, glprops.gl.canvas.height]);\r\n            glprops.uniforms.add('f_resolution', Constants.uniforms.UNIFORM2f, [glprops.gl.canvas.width, glprops.gl.canvas.height]);\r\n\r\n            glprops.gl.bindBuffer(glprops.gl.ARRAY_BUFFER, rectCoordBuffer);\r\n            glprops.gl.enableVertexAttribArray(positionLocation);\r\n            glprops.gl.vertexAttribPointer(positionLocation, 2, glprops.gl.FLOAT, false, 0, 0);\r\n            glprops.gl.bufferData(glprops.gl.ARRAY_BUFFER, rectCoords, glprops.gl.STATIC_DRAW);\r\n        }\r\n\r\n        glprops.textures.initializeNewTextures(glprops.program);\r\n        glprops.textures.refreshScene();\r\n        glprops.uniforms.updateProgram(glprops.gl, glprops.program);\r\n\r\n        glprops.gl.drawArrays(glprops.gl.TRIANGLES, 0, 6);\r\n        glprops.isInitialized = true;\r\n\r\n        return glprops;\r\n    },\r\n\r\n    /**\r\n     * read pixels from GL context\r\n     * @param glProps\r\n     */\r\n    getCanvasPixels(glprops) {\r\n        var glctx = glprops.gl;\r\n        if (!glprops.pixelarray) {\r\n            glprops.pixelarray = new Uint8Array(glctx.canvas.width * glctx.canvas.height * 4);\r\n        }\r\n        glctx.readPixels(0, 0, glctx.canvas.width, glctx.canvas.height, glctx.RGBA, glctx.UNSIGNED_BYTE, glprops.pixelarray);\r\n        var imgData = glprops.canvas2DHelperContext.createImageData(glctx.canvas.width, glctx.canvas.height);\r\n        imgData.data.set(new Uint8ClampedArray(glprops.pixelarray));\r\n        return imgData;\r\n    }\r\n};","export default {\n  \"freichen_edge_detection\": {\n    \"fragment\": \"precision mediump float; uniform sampler2D u_image0; varying vec2 v_texCoord; uniform vec2 f_resolution; vec2 texel = vec2(1.0 / f_resolution.x, 1.0 / f_resolution.y); mat3 G[9];  const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 ); const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 ); const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 ); const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 ); const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 ); const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 ); const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 ); const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 ); const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );  void main(void) {      G[0] = g0,     G[1] = g1,     G[2] = g2,     G[3] = g3,     G[4] = g4,     G[5] = g5,     G[6] = g6,     G[7] = g7,     G[8] = g8;      mat3 I;     float cnv[9];     vec3 sampl;      for (float i=0.0; i<3.0; i++) {         for (float j=0.0; j<3.0; j++) {             sampl = texture2D(u_image0, v_texCoord + texel * vec2(i-1.0,j-1.0) ).rgb;             I[int(i)][int(j)] = length(sampl);         }     }      for (int i=0; i<9; i++) {         float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);         cnv[i] = dp3 * dp3;     }      float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);     float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);      gl_FragColor = vec4(vec3(sqrt(M/S)), texture2D( u_image0, v_texCoord ).a ); }\",\n    \"vertex\": \"attribute vec2 a_position; attribute vec2 a_texCoord; uniform vec2 u_resolution; varying vec2 v_texCoord;  void main() {     vec2 zeroToOne = a_position / u_resolution;     vec2 zeroToTwo = zeroToOne * 2.0;     vec2 clipSpace = zeroToTwo - 1.0;     gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);     v_texCoord = a_texCoord; }\"\n  },\n  \"greyscale\": {\n    \"fragment\": \"precision mediump float; varying vec2 v_texCoord;  uniform sampler2D u_image0;  void main(void) {     vec4 px = texture2D(u_image0, v_texCoord);     float avg = (px.r + px.g + px.b)/3.0;     gl_FragColor = vec4(avg, avg, avg, px.a); }\",\n    \"vertex\": \"attribute vec2 a_position; attribute vec2 a_texCoord; uniform vec2 u_resolution; varying vec2 v_texCoord;  void main() {     vec2 zeroToOne = a_position / u_resolution;     vec2 zeroToTwo = zeroToOne * 2.0;     vec2 clipSpace = zeroToTwo - 1.0;     gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);     v_texCoord = a_texCoord; }\"\n  },\n  \"passthrough\": {\n    \"fragment\": \"precision mediump float; uniform sampler2D u_image0; varying vec2 v_texCoord;  void main() {     gl_FragColor = texture2D(u_image0, v_texCoord); }\",\n    \"vertex\": \"attribute vec2 a_position; attribute vec2 a_texCoord; uniform vec2 u_resolution; varying vec2 v_texCoord;  void main() {     vec2 zeroToOne = a_position / u_resolution;     vec2 zeroToTwo = zeroToOne * 2.0;     vec2 clipSpace = zeroToTwo - 1.0;     gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);     v_texCoord = a_texCoord; }\"\n  },\n  \"sepia\": {\n    \"fragment\": \"precision mediump float; varying vec2 v_texCoord;  uniform sampler2D u_image0; uniform vec4 light; uniform vec4 dark; uniform float desat; uniform float toned;  const mat4 coeff = mat4(     0.393, 0.349, 0.272, 1.0,     0.796, 0.686, 0.534, 1.0,     0.189, 0.168, 0.131, 1.0,     0.0, 0.0, 0.0, 1.0 );  void main(void) {     vec4 sourcePixel = texture2D(u_image0, v_texCoord);     gl_FragColor = coeff * sourcePixel; }\",\n    \"vertex\": \"attribute vec2 a_position; attribute vec2 a_texCoord; uniform vec2 u_resolution; varying vec2 v_texCoord;  void main() {     vec2 zeroToOne = a_position / u_resolution;     vec2 zeroToTwo = zeroToOne * 2.0;     vec2 clipSpace = zeroToTwo - 1.0;     gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);     v_texCoord = a_texCoord; }\"\n  },\n  \"sobel_edge_detection\": {\n    \"fragment\": \"precision mediump float; varying vec2 v_texCoord; uniform sampler2D u_image0; uniform vec2 f_resolution;  void main(void) {     float x = 1.0 / f_resolution.x;     float y = 1.0 / f_resolution.y;     vec4 horizEdge = vec4( 0.0 );     horizEdge -= texture2D( u_image0, vec2( v_texCoord.x - x, v_texCoord.y - y ) ) * 1.0;     horizEdge -= texture2D( u_image0, vec2( v_texCoord.x - x, v_texCoord.y     ) ) * 2.0;     horizEdge -= texture2D( u_image0, vec2( v_texCoord.x - x, v_texCoord.y + y ) ) * 1.0;     horizEdge += texture2D( u_image0, vec2( v_texCoord.x + x, v_texCoord.y - y ) ) * 1.0;     horizEdge += texture2D( u_image0, vec2( v_texCoord.x + x, v_texCoord.y     ) ) * 2.0;     horizEdge += texture2D( u_image0, vec2( v_texCoord.x + x, v_texCoord.y + y ) ) * 1.0;     vec4 vertEdge = vec4( 0.0 );     vertEdge -= texture2D( u_image0, vec2( v_texCoord.x - x, v_texCoord.y - y ) ) * 1.0;     vertEdge -= texture2D( u_image0, vec2( v_texCoord.x    , v_texCoord.y - y ) ) * 2.0;     vertEdge -= texture2D( u_image0, vec2( v_texCoord.x + x, v_texCoord.y - y ) ) * 1.0;     vertEdge += texture2D( u_image0, vec2( v_texCoord.x - x, v_texCoord.y + y ) ) * 1.0;     vertEdge += texture2D( u_image0, vec2( v_texCoord.x    , v_texCoord.y + y ) ) * 2.0;     vertEdge += texture2D( u_image0, vec2( v_texCoord.x + x, v_texCoord.y + y ) ) * 1.0;     vec3 edge = sqrt((horizEdge.rgb * horizEdge.rgb) + (vertEdge.rgb * vertEdge.rgb));      gl_FragColor = vec4( edge, texture2D( u_image0, v_texCoord ).a ); }\",\n    \"vertex\": \"attribute vec2 a_position; attribute vec2 a_texCoord; uniform vec2 u_resolution; varying vec2 v_texCoord;  void main() {     vec2 zeroToOne = a_position / u_resolution;     vec2 zeroToTwo = zeroToOne * 2.0;     vec2 clipSpace = zeroToTwo - 1.0;     gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);     v_texCoord = a_texCoord; }\"\n  }\n}","export default class {\r\n    /**\r\n     * c-tor\r\n     * @param gl\r\n     * @param width\r\n     * @param height\r\n     */\r\n    constructor(gl, width, height) {\r\n        /** internal texture array */\r\n        this._textures = {};\r\n\r\n        /** width */\r\n        this.width = width;\r\n\r\n        /** height */\r\n        this.height = height;\r\n\r\n        /** gl context */\r\n        this.gl = gl;\r\n\r\n        /** uninitialized textures */\r\n        this._unitialized = [];\r\n\r\n        /** dirty textures (needs updating) */\r\n        this._dirty = [];\r\n\r\n        /** texture indices */\r\n        this.textureIndices = [];\r\n    }\r\n\r\n    /**\r\n     * add a texture\r\n     * @param {String} name\r\n     * @param {Object} texture\r\n     * @param {Integer} glindex\r\n     * @param {Array} pixelstore\r\n     */\r\n    add(name, texture, glindex, pixelstore) {\r\n        if (!glindex) {\r\n            glindex = 0;\r\n            while (this.textureIndices.indexOf(glindex) !== -1) {\r\n                glindex ++;\r\n            }\r\n        }\r\n\r\n        if (!pixelstore) {\r\n            pixelstore = [];\r\n        }\r\n        this.textureIndices.push(glindex);\r\n\r\n        this._textures[name] = {\r\n            name: name,\r\n            glindex: glindex,\r\n            texture: texture,\r\n            gltexture: this.gl.createTexture(),\r\n            initialized: false,\r\n            pixelStore: pixelstore,\r\n            dirty: true };\r\n\r\n        this._unitialized.push(this._textures[name]);\r\n    };\r\n\r\n    /**\r\n     * update a uniform\r\n     * @param name name of texture\r\n     * @param texture\r\n     */\r\n    update(name, texture) {\r\n        if (texture) {\r\n            this._textures[name].texture = texture;\r\n        }\r\n        this._textures[name].dirty = true;\r\n        this._dirty.push(this._textures[name]);\r\n    };\r\n\r\n    /**\r\n     * refresh scene with updated textures\r\n     */\r\n    refreshScene() {\r\n        for (var c = 0; c < this._dirty.length; c++) {\r\n            this.gl.activeTexture(this.gl['TEXTURE' + this._dirty[c].glindex]);\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this._dirty[c].gltexture);\r\n            this.gl.texSubImage2D(this.gl.TEXTURE_2D, 0, 0, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this._dirty[c].texture);\r\n        }\r\n        this._dirty = [];\r\n    };\r\n\r\n    /**\r\n     * initialize new textures\r\n     * @param program\r\n     */\r\n    initializeNewTextures(program) {\r\n        if (this._unitialized.length === 0) { return; }\r\n        var gl = this.gl;\r\n        for (var c = 0; c < this._unitialized.length; c++) {\r\n            this._unitialized[c].location = gl.getUniformLocation(program, 'u_image' + this._unitialized[c].glindex);\r\n            gl.uniform1i(this._unitialized[c].location, this._unitialized[c].glindex);\r\n            gl.activeTexture(gl['TEXTURE' + this._unitialized[c].glindex]);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._unitialized[c].gltexture);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n            for (var d = 0; d < this._unitialized[c].pixelStore.length; d++) {\r\n                gl.pixelStorei(gl[this._unitialized[c].pixelStore[d].property], this._unitialized[c].pixelStore[d].value);\r\n            }\r\n\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._unitialized[c].texture);\r\n\r\n            this._unitialized[c].initialized = true;\r\n            this._unitialized[c].dirty = false;\r\n        }\r\n        this._unitialized = [];\r\n    };\r\n}","export default class {\r\n    /**\r\n     * c-tor\r\n     */\r\n    constructor() {\r\n        /**\r\n         * internal mapping of uniforms\r\n         * @type {{}}\r\n         * @private\r\n         */\r\n        this._uniforms = {};\r\n    }\r\n\r\n    /**\r\n     * add a uniform\r\n     * @param type type of uniform (1f, 2f, 3f, 4f, 1i, 2i, 3i, 4u\r\n     */\r\n    add(name, type, values) {\r\n        this._uniforms[name] = { name: name, type: type, values: values, dirty: true };\r\n    };\r\n\r\n    /**\r\n     * update a uniform\r\n     * @param type type of uniform (1f, 2f, 3f, 4f, 1i, 2i, 3i, 4u\r\n     */\r\n    update(name, values) {\r\n        this._uniforms[name].values = values;\r\n        this._uniforms[name].dirty = true;\r\n    };\r\n\r\n\r\n    /**\r\n     * update uniforms on GL context and program\r\n     * @param gl WebGL context\r\n     * @param program\r\n     */\r\n    updateProgram(gl, program) {\r\n        for (var c in this._uniforms) {\r\n            if (this._uniforms[c].dirty) {\r\n                var u = gl.getUniformLocation(program, this._uniforms[c].name);\r\n                switch (this._uniforms[c].type) {\r\n                    case '1f':\r\n                        gl.uniform1f(u, this._uniforms[c].values[0]);\r\n                        break;\r\n\r\n                    case '2f':\r\n                        gl.uniform2f(u, this._uniforms[c].values[0], this._uniforms[c].values[1]);\r\n                        break;\r\n\r\n                    case '3f':\r\n                        gl.uniform3f(u, this._uniforms[c].values[0], this._uniforms[c].values[1], this._uniforms[c].values[2]);\r\n                        break;\r\n\r\n                    case '4f':\r\n                        gl.uniform4f(u, this._uniforms[c].values[0], this._uniforms[c].values[1], this._uniforms[c].values[2], this._uniforms[c].values[3]);\r\n                        break;\r\n\r\n                    case '1i':\r\n                        gl.uniform1i(u, this._uniforms[c].values[0]);\r\n                        break;\r\n\r\n                    case '2i':\r\n                        gl.uniform2i(u, this._uniforms[c].values[0], this._uniforms[c].values[1]);\r\n                        break;\r\n\r\n                    case '3i':\r\n                        gl.uniform3i(u, this._.uniforms[c].values[0], this._uniforms[c].values[1], this._uniforms[c].values[2]);\r\n                        break;\r\n\r\n                    case '4i':\r\n                        gl.uniformif(u, this._uniforms[c].values[0], this._uniforms[c].values[1], this._uniforms[c].values[2], this._uniforms[c].values[3]);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import CCWCVideo from './ccwc-video.es6';\r\nimport Filters from '../node_modules/ccwc-image-utils/src/webgl/filters.es6';\r\nimport Shaders from '../node_modules/ccwc-image-utils/src/webgl/shaders.es6';\r\n\r\nexport default class extends CCWCVideo {\r\n    /**\r\n     * initialize default class properties\r\n     * @private\r\n     */\r\n    setProperties() {\r\n        super.setProperties();\r\n\r\n        /**\r\n         * When the texture read (_glReadFlipCorrection) is true, this makes the display go upside down, correct the canvas by inverse scaling in the vertical\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        this._flipCanvas = false;\r\n\r\n        /**\r\n         * use webgl\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._useWebGL = false;\r\n    };\r\n\r\n    /**\r\n     * on video playing handler\r\n     */\r\n    onPlaying() {\r\n        super.onPlaying();\r\n        if (this._useWebGL) {\r\n            this.webglProperties.renderobj = this.webglProperties.setupHandler.apply(this, [this.webglProperties]);\r\n            var event = new CustomEvent('webglsetup', { detail: { properties: this.webglProperties } });\r\n            this.dispatchEvent(event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get image data for current frame\r\n     * @param {boolean} mode data mode (binary or base64)\r\n     * @param {boolean} noredraw do not perform redraw (can be wasteful)\r\n     * @return {object} image data\r\n     */\r\n    getCurrentFrameData(mode, noredraw) {\r\n        var data, filtered;\r\n        if (!mode) {\r\n            mode = this.frameDataMode;\r\n        }\r\n        if (!noredraw) {\r\n            if (this._useWebGL) {\r\n                this.webglProperties.renderobj.textures.update('video');\r\n                this.webglProperties.renderHandler(this.webglProperties.renderobj);\r\n            } else {\r\n                this.canvasctx.drawImage(\r\n                    this.videoElement, 0, 0,\r\n                    this.videoScaledWidth * this.canvasScale,\r\n                    this.videoScaledHeight * this.canvasScale);\r\n\r\n                if (this.canvasFilter) {\r\n                    filtered = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    this.canvasctx.putImageData(this.canvasFilter(filtered), 0, 0, 0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        switch (mode) {\r\n            /*case 'binary':\r\n                var base64Data = data.replace('data:image/png;base64', '');\r\n                var binaryData = new Buffer(base64Data, 'base64');\r\n                data = binaryData;\r\n                break;*/\r\n\r\n            case 'imagedataurl':\r\n                data = this.canvasElement.toDataURL('image/png');\r\n                break;\r\n\r\n            case 'imagedata':\r\n                if (!filtered) {\r\n                    if (this._useWebGL) {\r\n                        data = Filters.getCanvasPixels(this.webglProperties.renderobj);\r\n                    } else {\r\n                        data = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    }\r\n                } else {\r\n                    // save some CPU cycles if we already did this\r\n                    data = filtered;\r\n                }\r\n                break;\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * setup handler for WebGL Scene\r\n     * @param {Object} props webgl properties\r\n     * @return renderobj\r\n     */\r\n    webglSetupHandler(props) {\r\n        var filter;\r\n        if (props.vertexShader && props.fragmentShader) {\r\n            filter = Filters.createFilterFromShaders(props.vertexShader, props.fragmentShader)\r\n        } else {\r\n            filter = Filters.createFilterFromName(props.filter, props.filterLibrary);\r\n        }\r\n\r\n        props.textures.push({\r\n            name: 'video',\r\n            texture: this.videoElement,\r\n            pixelStore: [{ property: 'UNPACK_FLIP_Y_WEBGL', value: this.webglProperties.flipTextureY }],\r\n            index: 0});\r\n\r\n        return Filters.createRenderObject({\r\n            gl: this.canvasctx,\r\n            filter: filter,\r\n            textures: props.textures\r\n        });\r\n    };\r\n\r\n    /**\r\n     * render handler for WebGL Scene\r\n     * @param renderobj WebGL render properties\r\n     */\r\n    webglRenderHandler(renderobj) {\r\n        Filters.render(renderobj);\r\n    };\r\n\r\n    /**\r\n     * parse attributes on element\r\n     * @private\r\n     */\r\n    parseAttributes() {\r\n        super.parseAttributes();\r\n        if (this.hasAttribute('useWebGL')) {\r\n            this._useWebGL = true;\r\n            var props = this.getAttribute('useWebGL');\r\n            if (props) {\r\n                props = JSON.parse(props);\r\n                if (props.flipTextureY) {\r\n                    this.webglProperties.flipTextureY = props.flipTextureY;\r\n                }\r\n                if (props.filter) {\r\n                    this.webglProperties.filter = props.filter;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.hasAttribute('flipCanvas')) {\r\n            this._flipCanvas = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * element created callback\r\n     * @private\r\n     */\r\n    createdCallback() {\r\n        this.webglProperties = {\r\n            flipTextureY: false,\r\n            filterLibrary: Shaders,\r\n            setupHandler: this.webglSetupHandler,\r\n            renderHandler: this.webglRenderHandler,\r\n            filter: 'passthrough',\r\n            textures: []\r\n        };\r\n\r\n        super.createdCallback();\r\n    };\r\n}","/**\r\n * CCWCVideo supports both video files and camera feeds\r\n * Blit your video to a canvas, get frame data, scale the frame/canvas output, and render video to an external canvas of your choosing\r\n */\r\nexport default class extends HTMLElement {\r\n\r\n    /**\r\n     * initialize default class properties\r\n     * @private\r\n     */\r\n    setProperties() {\r\n        /**\r\n         * video source file or stream\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        this._source = '';\r\n\r\n        /**\r\n         * use webgl\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        //this._useWebGL = false;\r\n\r\n        /**\r\n         * use camera\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._useCamera = false;\r\n\r\n        /**\r\n         * is component ready\r\n         * @type {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        /**\r\n         * is video playing\r\n         * @type {boolean}\r\n         */\r\n        this.isPlaying = false;\r\n\r\n        /**\r\n         * width of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledWidth = 0;\r\n\r\n        /**\r\n         * width of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledWidth = 0;\r\n\r\n        /**\r\n         * height of scaled video\r\n         * @type {int}\r\n         */\r\n        this.videoScaledHeight = 0;\r\n\r\n        /**\r\n         * what type of data comes back with frame data event\r\n         * @type {string}\r\n         * @default imagedataurl\r\n         */\r\n        this.frameDataMode = 'none';\r\n\r\n        /**\r\n         * determines whether to use the canvas element for display instead of the video element\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.useCanvasForDisplay = false;\r\n\r\n        /**\r\n         * canvas filter function (manipulate pixels)\r\n         * @type {method}\r\n         * @default 0 ms\r\n         */\r\n        this.canvasFilter = null;\r\n\r\n        /**\r\n         * When the texture read (_glReadFlipCorrection) is true, this makes the display go upside down, correct the canvas by inverse scaling in the vertical\r\n         * @type {Boolean}\r\n         * @default false\r\n         */\r\n        //this._flipCanvas = false;\r\n\r\n        /**\r\n         * refresh interval when using the canvas for display\r\n         * @type {int}\r\n         * @default 0 ms\r\n         */\r\n        this.canvasRefreshInterval = 0;\r\n\r\n        /**\r\n         * video element\r\n         * @type {HTMLElement}\r\n         * @private\r\n         */\r\n        this.videoElement = null;\r\n\r\n        /**\r\n         * camera sources list\r\n         * @type {Array}\r\n         */\r\n        this.cameraSources = [];\r\n\r\n        /**\r\n         * canvas element\r\n         * @type {Canvas}\r\n         * @private\r\n         */\r\n        this.canvasElement = null;\r\n\r\n        /**\r\n         * component shadow root\r\n         * @type {ShadowRoot}\r\n         * @private\r\n         */\r\n        this.root = null;\r\n\r\n        /**\r\n         * interval timer to draw frame redraws\r\n         * @type {int}\r\n         * @private\r\n         */\r\n        this.tick = null;\r\n\r\n        /**\r\n         * canvas context\r\n         * @type {CanvasContext}\r\n         * @private\r\n         */\r\n        this.canvasctx = null;\r\n\r\n        /**\r\n         * has the canvas context been overridden from the outside?\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._canvasOverride = false;\r\n\r\n        /**\r\n         * width of component\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.width = 0;\r\n\r\n        /**\r\n         * height of component\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.height = 0;\r\n\r\n        /**\r\n         * left offset for letterbox of video\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.letterBoxLeft = 0;\r\n\r\n        /**\r\n         * top offset for letterbox of video\r\n         * @type {int}\r\n         * @default 0\r\n         */\r\n        this.letterBoxTop = 0;\r\n\r\n        /**\r\n         * aspect ratio of video\r\n         * @type {number}\r\n         */\r\n        this.aspectRatio = 0;\r\n\r\n        /**\r\n         * render scale for canvas frame data\r\n         * best used when grabbing frame data at a different size than the shown video\r\n         * @attribute canvasScale\r\n         * @type {float}\r\n         * @default 1.0\r\n         */\r\n        this.canvasScale = 1.0;\r\n    }\r\n\r\n    /**\r\n     * on video playing handler\r\n     */\r\n    onPlaying() {\r\n        this.isPlaying = true;\r\n        var event = new CustomEvent('videoplaying', {\r\n            detail: {\r\n                source: this.source,\r\n                videoElement: this.videoElement,\r\n                videoWidth: this.videoScaledWidth,\r\n                videoHeight: this.videoScaledHeight,\r\n                width: this.width,\r\n                height: this.height } });\r\n        this.dispatchEvent(event);\r\n\r\n        this.canvasElement.width = this.videoScaledWidth * this.canvasScale;\r\n        this.canvasElement.height = this.videoScaledHeight * this.canvasScale;\r\n\r\n        var ctxstring = this._useWebGL ? 'webgl' : '2d';\r\n        if (!this._canvasOverride) {\r\n            this.canvasctx = this.canvasElement.getContext(ctxstring);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update canvas dimensions when resized\r\n     * @private\r\n     */\r\n    onResize() {\r\n        // set size properties based on component height\r\n        this.width = this.offsetWidth;\r\n        this.height = this.offsetHeight;\r\n\r\n        // calculate aspect ratio\r\n        this.aspectRatio = this.videoElement.videoWidth / this.videoElement.videoHeight;\r\n        this.videoScaledWidth = this.width;\r\n        this.videoScaledHeight = this.height;\r\n\r\n        // calculate letterbox borders\r\n        var componentAspectRatio = this.width/this.height;\r\n        if (componentAspectRatio < this.aspectRatio) {\r\n            this.videoScaledHeight = this.width / this.aspectRatio;\r\n            this.letterBoxTop = this.height/2 - this.videoScaledHeight/2;\r\n            this.letterBoxLeft = 0;\r\n        } else if (componentAspectRatio > this.aspectRatio) {\r\n            this.videoScaledWidth = this.height * this.aspectRatio;\r\n            this.letterBoxLeft = this.width/2 - this.videoScaledWidth/2;\r\n            this.letterBoxTop = 0;\r\n        } else {\r\n            this.letterBoxTop = 0;\r\n            this.letterBoxLeft = 0;\r\n        }\r\n\r\n        // set video/canvas to component size\r\n        this.videoElement.setAttribute('width', this.videoScaledWidth);\r\n        this.videoElement.setAttribute('height', this.videoScaledHeight);\r\n        this.canvasElement.setAttribute('width', this.videoScaledWidth);\r\n        this.canvasElement.setAttribute('height', this.videoScaledHeight);\r\n        this.videoElement.style.top = this.letterBoxTop + 'px';\r\n        this.videoElement.style.left = this.letterBoxLeft + 'px';\r\n        this.canvasElement.style.top = this.letterBoxTop + 'px';\r\n        this.canvasElement.style.left = this.letterBoxLeft + 'px';\r\n    };\r\n\r\n\r\n    /**\r\n     * set video source\r\n     * @param {string | int} src video source uri\r\n     */\r\n    set source(src) {\r\n        if (!src) { return; }\r\n        this._source = src;\r\n\r\n        if (this._useCamera && this.cameraSources.length === 0) {\r\n            this.refreshCameraSources();\r\n            return;\r\n        }\r\n\r\n        if (this._useCamera || parseInt(src) === src) {\r\n            this.setCameraSourceByIndex(src);\r\n        } else if (this._useCamera) {\r\n            this.setCameraSourceByID(src);\r\n        } else {\r\n            this.videoElement.src = src;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get video source\r\n     * @return {string | int} src video source uri\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    };\r\n\r\n    /**\r\n     * get canvas context for drawing into it\r\n     * @return {object} context canvas context\r\n     */\r\n    get canvasContext() {\r\n        return this.canvasctx;\r\n    };\r\n\r\n    /**\r\n     * get canvas context for drawing into it\r\n     * @param {object} context canvas context\r\n     */\r\n    set canvasContext(context) {\r\n        this.canvasctx = context;\r\n        this._canvasOverride = true;\r\n    };\r\n\r\n    /**\r\n     * get image data for current frame\r\n     * @param {boolean} mode data mode (binary or base64)\r\n     * @param {boolean} noredraw do not perform redraw (can be wasteful)\r\n     * @return {object} image data\r\n     */\r\n    getCurrentFrameData(mode, noredraw) {\r\n        var data, filtered;\r\n        if (!mode) {\r\n            mode = this.frameDataMode;\r\n        }\r\n        if (!noredraw) {\r\n            if (this._useWebGL) {\r\n                this.webglProperties.renderobj.textures.update('video');\r\n                this.webglProperties.renderHandler(this.webglProperties.renderobj);\r\n            } else {\r\n                this.canvasctx.drawImage(\r\n                    this.videoElement, 0, 0,\r\n                    this.videoScaledWidth * this.canvasScale,\r\n                    this.videoScaledHeight * this.canvasScale);\r\n\r\n                if (this.canvasFilter) {\r\n                    filtered = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    this.canvasctx.putImageData(this.canvasFilter(filtered), 0, 0, 0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale );\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        switch (mode) {\r\n            /*case 'binary':\r\n                var base64Data = data.replace('data:image/png;base64', '');\r\n                var binaryData = new Buffer(base64Data, 'base64');\r\n                data = binaryData;\r\n                break;*/\r\n\r\n            case 'imagedataurl':\r\n                data = this.canvasElement.toDataURL('image/png');\r\n                break;\r\n\r\n            case 'imagedata':\r\n                if (!filtered) {\r\n                    //if (this._useWebGL) {\r\n                      //  data = ccwc.image.webgl.filter.getCanvasPixels(this.webglProperties.renderobj);\r\n                    //} else {\r\n                        data = this.canvasctx.getImageData(0, 0, this.videoScaledWidth * this.canvasScale, this.videoScaledHeight * this.canvasScale);\r\n                    //}\r\n                } else {\r\n                    // save some CPU cycles if we already did this\r\n                    data = filtered;\r\n                }\r\n                break;\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * set camera source by index\r\n     * @param {int} index\r\n     */\r\n    setCameraSourceByIndex(index) {\r\n        if (!index || index >= this.cameraSources.length) { console.log(\"Video Source Index does not exist\"); return; }\r\n        this.setCameraSourceByID(this.cameraSources[index].id);\r\n    };\r\n\r\n    /**\r\n     * set camera source by id\r\n     * @param {String} id\r\n     */\r\n    setCameraSourceByID(id) {\r\n        navigator.webkitGetUserMedia(\r\n            { video: {optional: [{sourceId: id }]}},\r\n            this.onCameraStream.bind(this),\r\n            function() {}\r\n        );\r\n    };\r\n\r\n    /**\r\n     * refresh camera sources\r\n     */\r\n    refreshCameraSources() {\r\n        this.cameraSources = [];\r\n        MediaStreamTrack.getSources( sources => {\r\n            this.onCameraSources(sources);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * on camera video source stream\r\n     * @param stream\r\n     * @private\r\n     */\r\n    onCameraStream(stream) {\r\n        this.videoElement.src = URL.createObjectURL(stream);\r\n        this.videoElement.onloadedmetadata = e => {\r\n            this.onResize();\r\n        };\r\n    };\r\n\r\n    /**\r\n     * on camera sources callback\r\n     * @param {array} sources found\r\n     * @private\r\n     */\r\n    onCameraSources(sources) {\r\n        var storageIndex = 0;\r\n        for (var i=0; i < sources.length; i++) {\r\n            if (sources[i].kind == 'video') {\r\n                var label = sources[i].label;\r\n                if (label == \"\") { label = \"video \" + Number(storageIndex+1); }\r\n                sources[storageIndex] = sources[i].id;\r\n                this.cameraSources.push({ label: label, id: sources[i].id });\r\n                storageIndex++;\r\n            }\r\n        }\r\n\r\n        var event = new CustomEvent('camerasfound', { detail: { cameras: this.cameraSources } });\r\n        this.dispatchEvent(event);\r\n        if (this._source) { this.source = this._source; }\r\n    };\r\n\r\n    /**\r\n     * parse attributes on element\r\n     * @private\r\n     */\r\n    parseAttributes() {\r\n        if (this.hasAttribute('useCamera') || this.hasAttribute('usecamera')) {\r\n            this._useCamera = true;\r\n        } else {\r\n            this._useCamera = false;\r\n        }\r\n\r\n        if (this.hasAttribute('src')) {\r\n            this._source = this.getAttribute('src');\r\n        }\r\n\r\n        if (this.hasAttribute('useCanvasForDisplay')) {\r\n            this.useCanvasForDisplay = true;\r\n        } else {\r\n            this.useCanvasForDisplay = false;\r\n        }\r\n\r\n        if (this.hasAttribute('frameDataMode')) {\r\n            this.frameDataMode = this.getAttribute('frameDataMode');\r\n        }\r\n\r\n        if (this.hasAttribute('canvasRefreshInterval')) {\r\n            this.canvasRefreshInterval = parseInt(this.getAttribute('canvasRefreshInterval'));\r\n        }\r\n\r\n        if (this.hasAttribute('canvasScale')) {\r\n            this.canvasScale = parseFloat(this.getAttribute('canvasScale'));\r\n        }\r\n\r\n        if (this.canvasRefreshInterval === 0 && this.useCanvasForDisplay) {\r\n            console.log('Warning: Using canvas for display, but the canvas refresh interval is not set or set to 0. Setting refresh interval to 250ms.');\r\n            this.canvasRefreshInterval = 250;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * element created callback\r\n     * @private\r\n     */\r\n    createdCallback() {\r\n        this.setProperties();\r\n        this.parseAttributes();\r\n    };\r\n\r\n    /**\r\n     * element attached callback\r\n     * @private\r\n     */\r\n    attachedCallback() {\r\n        let template = this.owner.querySelector(\"template\");\r\n        let clone = template.content.cloneNode(true);\r\n        this.root = this.createShadowRoot();\r\n        this.root.appendChild(clone);\r\n\r\n        window.addEventListener('HTMLImportsLoaded', e => {\r\n            this.onResize();\r\n        });\r\n\r\n        this.videoElement = this.root.querySelector('#vid');\r\n        this.videoElement.addEventListener('play', e => this.onPlaying(e));\r\n        this.canvasElement = this.root.querySelector('#canvas');\r\n\r\n        if (this._flipCanvas) {\r\n            this.canvasElement.style.transform = 'scale(1, -1)';\r\n        }\r\n        this.videoElement.onloadedmetadata = e => {\r\n            this.onResize();\r\n        };\r\n\r\n        this.source = this._source;\r\n        if (this.useCanvasForDisplay) {\r\n            this.videoElement.style.display = 'none';\r\n        } else {\r\n            this.canvasElement.style.display = 'none';\r\n        }\r\n\r\n        if (this.canvasRefreshInterval > 0) {\r\n            this.tick = setInterval(() => {\r\n                if (this.width === 0 || this.height === 0) { return; }\r\n                if (!this.isPlaying) { return; }\r\n                var event = new CustomEvent('frameupdate', { detail: {\r\n                    framedata: this.getCurrentFrameData(),\r\n                    canvascontext: this.canvasctx,\r\n                    videoWidth: this.videoScaledWidth * this.canvasScale,\r\n                    videoHeight: this.videoScaledHeight * this.canvasScale,\r\n                    videoLeft: this.letterBoxLeft * this.canvasScale,\r\n                    videoTop: this.letterBoxTop * this.canvasScale,\r\n                    width: this.width * this.canvasScale,\r\n                    height: this.height * this.canvasScale }});\r\n\r\n                this.dispatchEvent(event);\r\n            }, this.canvasRefreshInterval);\r\n        }\r\n\r\n        this.isReady = true;\r\n        var event = new CustomEvent('ready');\r\n        this.dispatchEvent(event);\r\n    };\r\n\r\n    /**\r\n     * element detached callback\r\n     * @private\r\n     */\r\n    detachedCallback() {};\r\n\r\n\r\n    /**\r\n     * attributeChangedCallback\r\n     * @private\r\n     * @param {String} attr attribute changed\r\n     * @param {*} oldVal old value\r\n     * @param {*} newVal new value\r\n     */\r\n    attributeChangedCallback(attr, oldVal, newVal) {};\r\n}"]}